==7691== Memcheck, a memory error detector
==7691== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==7691== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==7691== Command: ./noro
==7691== Parent PID: 3549
==7691== 
==7691== 
==7691== Process terminating with default action of signal 6 (SIGABRT)
==7691==    at 0x4D1936C: __pthread_kill_implementation (pthread_kill.c:44)
==7691==    by 0x4CC9837: raise (raise.c:26)
==7691==    by 0x4CB3534: abort (abort.c:79)
==7691==    by 0x49E4832: __gnu_cxx::__verbose_terminate_handler() [clone .cold] (vterminate.cc:95)
==7691==    by 0x49F0BFB: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:48)
==7691==    by 0x49F0C68: std::terminate() (eh_terminate.cc:58)
==7691==    by 0x49F0ECC: __cxa_throw (eh_throw.cc:98)
==7691==    by 0x1A67B0: sol::default_at_panic(lua_State*) (state_handling.hpp:68)
==7691==    by 0x4914BEE: ??? (in /usr/lib/liblua.so.5.4.4)
==7691==    by 0x49144AF: ??? (in /usr/lib/liblua.so.5.4.4)
==7691==    by 0x490FDC7: lua_error (in /usr/lib/liblua.so.5.4.4)
==7691==    by 0x1A5622: sol::type_panic_c_str(lua_State*, int, sol::type, sol::type, char const*) (error_handler.hpp:104)
==7691== 
==7691== HEAP SUMMARY:
==7691==     in use at exit: 962,569 bytes in 680 blocks
==7691==   total heap usage: 934 allocs, 254 frees, 1,225,818 bytes allocated
==7691== 
==7691== LEAK SUMMARY:
==7691==    definitely lost: 32,816 bytes in 1 blocks
==7691==    indirectly lost: 0 bytes in 0 blocks
==7691==      possibly lost: 10,728 bytes in 149 blocks
==7691==    still reachable: 919,025 bytes in 530 blocks
==7691==         suppressed: 0 bytes in 0 blocks
==7691== Rerun with --leak-check=full to see details of leaked memory
==7691== 
==7691== For lists of detected and suppressed errors, rerun with: -s
==7691== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
